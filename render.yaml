# render.yaml
# For deploying the Delta Exchange Trading System using Render Blueprints

services:
  - type: web
    name: delta-trading-api
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn -w 1 -b 0.0.0.0:$PORT app:app --preload
    envVars:
      - key: DELTA_API_KEY
        sync: false # Set this value in Render dashboard for security
      - key: DELTA_API_SECRET
        sync: false # Set this value in Render dashboard for security
      - key: AI_STUDIO_SECRET
        sync: false # Set this value in Render dashboard for security
      - key: ENVIRONMENT
        value: testnet # Or 'production'
    disk:
      name: trading-data
      mountPath: /var/lib/sqlite # Mount point for the SQLite database
      sizeGB: 1 # Size of the persistent disk

  - type: worker
    name: delta-trading-worker
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: python -c "from app import initialize_system; initialize_system(); import time; while True: time.sleep(3600)"
    envVars:
      - key: DELTA_API_KEY
        sync: false
      - key: DELTA_API_SECRET
        sync: false
      - key: AI_STUDIO_SECRET
        sync: false
      - key: ENVIRONMENT
        value: testnet # Or 'production'
    disk:
      name: trading-data # Reference the same disk
      mountPath: /var/lib/sqlite # Mount point for the SQLite database
      sizeGB: 1

# If you need to expose internal SQLite as a managed service,
# you'd use a separate database service, but for embedded SQLite,
# a persistent disk mounted to both web and worker is the way.
